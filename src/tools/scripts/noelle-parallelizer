#!/bin/bash -e

installDir

inputIR=$1
afterLoopMetadata="afterLoopMetadata.bc"
intermediateResult="baseline_with_parallel_plan.bc" ;
intermediateResult_unoptimized="parallelized_unoptimized.bc" ;
outputIR=$3

# Step 0: Add loop ID to all loops
cmdToExecute="noelle-meta-loop-embed ${inputIR} -o ${afterLoopMetadata}"
echo $cmdToExecute ;
eval $cmdToExecute ;

# Step 1: Run parallelization planner
cmdToExecute="noelle-parallelization-planner ${afterLoopMetadata} -o ${intermediateResult} ${@:4}" ;
echo $cmdToExecute ;
eval $cmdToExecute ;

# Step 2: Run loop parallelization on bitcode with parallel plan
cmdToExecute="noelle-parallelizer-loop ${intermediateResult} -o ${intermediateResult_unoptimized} ${@:4}" ;
echo $cmdToExecute ;
eval $cmdToExecute ;

# Step 3: cleaning the metadata that are now disaligned with the code
cmdToExecute="noelle-meta-clean ${intermediateResult_unoptimized} ${intermediateResult_unoptimized}" ;
echo $cmdToExecute ;
eval $cmdToExecute ;

# Step 4: conventional optimizations
cmdToExecute="clang -O3 -c -emit-llvm ${intermediateResult_unoptimized} -o ${outputIR}" ;
echo $cmdToExecute ;
eval $cmdToExecute ;
